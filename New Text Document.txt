Hello Tim???????????

















1.
#Accuracy

#NB RUN A BASIC ANOVA !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

2. # Calculate summary statistics (mean and standard deviation)

n_ppt <-tus %>% group_by (ID)%>% count ()

MeanGoResppersub_cond <- tus %>% group_by(ID, Cue, req_action, OutValence, block, TrialCount, condition, correct) %>% summarise(GoResponse = mean(GoResponse))
MeanGoResppersub <- na.omit(MeanGoResppersub_conf)
MeanGoResp <- MeanGoResppersub_conf %>% group_by(Cue, req_action, block, OutValence, TrialCount) %>% summarise(GoResponse = mean(GoResponse))

summary_data <- MeanGoResppersub_cond %>%
  group_by(condition, req_action, OutValence) %>%
  summarise(
    mean_correct = mean(correct),
    sd_correct = sd(correct),
    count = n(),
    se_correct =sd_correct/sqrt(20),
  ) %>%
  na.omit()




# Create a ggplot with error bars, bars, and facets
ggplot(summary_data, aes(x = condition, y = mean_correct, ymin = mean_correct - se_correct, ymax = mean_correct + se_correct, fill = condition)) +
  geom_errorbar(position = position_dodge(width = 0.75), width = 0.2) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.75), width = 0.5, alpha = 0.5) +
  geom_text(aes(label = round(mean_correct, 2)), vjust = -0.5, position = position_dodge(width = 0.75)) +
  facet_grid(req_action ~ OutValence) +
  theme_APA

# add points !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NB






#!!!!may be do just the stat_sum with simple staff as above? 

pirateplot(formula = RT ~ condition  + req_action +OutValence,
           data = tus,
                           theme = 0,
           #main = "Fully customized pirateplot",
           #pal = "southpark", # southpark color palette
           bean.f.o = .6, # Bean fill
           point.o = .3, # Points
           inf.f.o = .7, # Inference fill
           inf.b.o = .8, # Inference border
           avg.line.o = 1, # Average line
           bar.f.o = .5, # Bar
           inf.f.col = "white", # Inf fill col
           inf.b.col = "black", # Inf border col
           avg.line.col = "black", # avg line col
           #bar.f.col = gray(.8), # bar filling color
           point.pch = 21,
           point.bg = "white",
           point.col = "black",
           point.cex = .7)+theme_APA
         # ylim = c(0.1, 1.0))









For the RTs, plots
How about RTs?
```{r}

# Calculate summary statistics (mean and standard deviation)
#!!!!may be do just the stat_sum with simple staff as above? 
pirateplot(formula = RT ~ condition  + req_action +OutValence,
           data = tus,
                           theme = 0,
           #main = "Fully customized pirateplot",
           #pal = "southpark", # southpark color palette
           bean.f.o = .2, # Bean fill
           point.o = .3, # Points
           inf.f.o = .7, # Inference fill
           inf.b.o = .8, # Inference border
           avg.line.o = 1, # Average line
           bar.f.o = .5, # Bar
           inf.f.col = "white", # Inf fill col
           inf.b.col = "black", # Inf border col
           avg.line.col = "black", # avg line col
           #bar.f.col = gray(.8), # bar filling color
           point.pch = 21,
           point.bg = "white",
           point.col = "black",
           point.cex = .7)+theme_APA
         # ylim = c(0.1, 1.0))


# compute mean_rt for each participant
Meanrtpersub_rt <- tus %>% group_by(ID, req_action, OutValence, condition, RT) %>% summarise(mean_rt = mean(RT))
Meanrtpersub_rt <- na.omit(Meanrtpersub_rt)
Meanrtpersub_rt <- Meanrtpersub_rt %>% group_by(req_action, OutValence, condition) %>% summarise(mean_rt = mean(mean_rt))

pirateplot(formula =  mean_rt ~ condition  + req_action +OutValence,
           data = Meanrtpersub_rt,
                           theme = 0,
           main = "mean_RT per subject",
           #pal = "southpark", # southpark color palette
           bean.f.o = .2, # Bean fill
           point.o = .3, # Points
           inf.f.o = .7, # Inference fill
           inf.b.o = .8, # Inference border
           avg.line.o = 1, # Average line
           bar.f.o = .5, # Bar
           inf.f.col = "white", # Inf fill col
           inf.b.col = "black", # Inf border col
           avg.line.col = "black", # avg line col
           #bar.f.col = gray(.8), # bar filling color
           point.pch = 21,
           point.bg = "white",
           point.col = "black",
           point.cex = .7)+theme_APA
         # ylim = c(0.1, 1.0))

#AND with tus # !!!!DOES NOT CALCULATE SD AND CONSEQUENTLY SE, THING WHY
Meanrtpersub_rt2 <- tus %>% group_by(ID, Cue, req_action, OutValence, block, TrialCount, condition, RT) %>% summarise(mean_rt = mean(RT))
Meanrtpersub_rt2 <- na.omit(Meanrtpersub_rt2)


summary_data_rt <- Meanrtpersub_rt2 %>%
  group_by(condition, req_action, OutValence) %>%
  summarise(
    mean_rt = mean(RT),
    sd_rt = sd(RT),  # Calculate the standard deviation of RT
    count = n(),
    se_rt = sd_rt / sqrt(ppts)  # Calculate the standard error
  ) %>%
  na.omit()

# Create a ggplot with error bars, bars, and facets
ggplot(summary_data_rt, aes(x = condition, y = mean_rt, ymin = mean_rt - se_rt, ymax = mean_rt + se_rt, fill = condition)) +
  geom_errorbar(position = position_dodge(width = 0.75), width = 0.2) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.75), width = 0.5, alpha = 0.5) +
  geom_text(aes(label = round(mean_rt, 2)), vjust = -0.5, position = position_dodge(width = 0.75)) +
 facet_grid(req_action ~ OutValence) +
theme_APA


# Merge summary_data and tus data to add data points
merged_data_rt <- merge(tus, summary_data_rt, by = "condition", all.x = TRUE) 
              #merged_data_rt <- merged_data_rt %>% na.omit()

# Create a ggplot with error bars, bars, data points, and facets
ggplot(data = summary_data_rt, aes(x = condition, y = mean_rt, fill = condition)) +
  geom_errorbar(aes(ymin = mean_rt - se_rt, ymax = mean_rt + se_rt),
                position = position_dodge(width = 0.75), width = 0.2) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.75), width = 0.5, alpha = 0.5) +

  # Use merged_data for geom_point instead of tus
  geom_point(data = merged_data_rt, aes(x = condition, y = mean_rt, color = condition),
             position = position_dodge(width = 0.75), size = 1) +
  geom_text(aes(label = round(mean_rt, 3)), vjust = -0.5, position = position_dodge(width = 0.75)) +
  facet_grid(req_action ~ OutValence) +
  theme_APA
```